
import { Injectable, EventEmitter } from '@angular/core';

import { IUser } from './user.interface';
import * as firebase from 'firebase';

@Injectable()
export class AuthService {

   public userChanged: EventEmitter<string> = new EventEmitter<string>();

   private currentUser: string = null;

   constructor() {

   }

   createUser(user: IUser): void {
      firebase.auth().createUserWithEmailAndPassword(user.email, user.password)
         .catch((error) => {
           // Handle Errors here.
           console.error('Error creating a user!', error.name, error.message);
      });
   }

   loginUser(user: IUser): void {
      firebase.auth().signInWithEmailAndPassword(user.email, user.password)
         .then ((result) => {
            // The firebase.User instance:
            console.log('Login promise:', result);
            this.currentUser = result.email;
            this.userChanged.emit(this.currentUser);
         })
         .catch((error) => {
            console.error('Error logging in!', error.name, error.message);
         });
   }

   isAuthenticated(): boolean {
      if (this.currentUser === null ) {
         const user = firebase.auth().currentUser;
         if (user !== null) {
            this.currentUser = user.email;
            this.userChanged.emit(this.currentUser);
            return true;
         }
         return false;
      }
      return true;
   }

   getCurrentUser(): string {
      return this.currentUser;
   }

   logoutUser(): void {
      firebase.auth().signOut()
         .then(() => {
            this.currentUser = null;
            this.userChanged.emit(null);
            console.log('Signed out');
         }, (error) => {
            console.log('An error happened.', error);
      });
   }
}
